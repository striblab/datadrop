sources:
    osm:
        type: GeoJSON
        url: https://vector.mapzen.com/osm/all/{z}/{x}/{y}.json

layers:
    earth:
        data: { source: osm }
        draw:
            polygons:
                order: 0
                color: [0.175, 0.175, 0.175]

    landuse:
        data: { source: osm }
        draw:
            polygons:
                order: 1
                color: [0.5, 0.875, 0.5]


    water:
        data: { source: osm }
        draw:
            polygons:
                order: 2
                color: [0.5, 0.5, 0.875]

    roads:
        data: { source: osm }
        draw:
            lines:
                order: 3
                color: [0.4, 0.4, 0.4]


    buildings:
        data: { source: osm }
        draw:
            polygons:
                order: 4
                style: rainbow
                color: [0.6, 0.6, 0.6]

lights:
    ambient:
        type: ambient
        ambient: 0.5

styles:
    rainbow_child:
        mix: rainbow
        shaders:
            blocks:
                color:
                    color.rgb = clamp(hsv2rgb(c) * 2., 0., 1.);

    rainbow:
        base: polygons
        animated: true
        shaders:
            blocks:
                global: |
                    vec3 hsv2rgb(vec3 c) {
                        vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);
                        vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);
                        return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);
                    }
                color: |
                    vec3 c = vec3(worldPosition().z * .003 + u_time / 10., 1.0, 1.0);
                    color.rgb = hsv2rgb(c);

    scale:
        base: polygons
        shaders:
            uniforms:
                scale: [1, 2, 3]
            blocks:
                position:
                    position.xyz *= scale;
